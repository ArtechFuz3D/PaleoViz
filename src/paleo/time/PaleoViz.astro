---
import "@fontsource-variable/inter";
import "~/styles/index.css";

const { generator, site } = Astro;
const image = new URL("/thumb.png", site);
const description =
  "Make Your Own Dinosaur & Fossil Themed Audio Visualisers with ArtechFuz3D";
---

<!doctype html>
<html lang="en" class="h-full motion-safe:scroll-smooth" data-theme="dark">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE-edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <meta name="generator" content={generator} />
    <link
      href="https://cdn.jsdelivr.net/npm/@mdi/font/css/materialdesignicons.min.css"
      rel="stylesheet"
    />
    <title>Paleontological Audio Visualiser</title>
    <meta name="description" content={description} />
    <meta property="og:image" content={image} />
    <meta property="og:url" content={site} />
    <meta name="twitter:card" content="summary_large_image" />
    <style>
      body {
        transition: background 0.5s ease; /* Smooth transition for background */

        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        min-height: 100vh;
      }

      #canvas1 {
        background: black;
        /* background-color: transparent;  */
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }

      /* Styling for playlist controls */
      .playlist-controls {
        position: absolute;
        top: 20px;
        right: 20px;
        z-index: 10;
        color: white;
        font-family: Arial, sans-serif;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .playlist-controls button {
        margin: 5px;
        padding: 10px;
        font-size: 24px;
        background-color: rgba(255, 255, 255, 0.1);
        border: none;
        color: white;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s;
      }

      .playlist-controls button:hover {
        background-color: rgba(255, 255, 255, 0.3);
      }

      .playlist-controls ul {
        list-style-type: none;
        padding: 0;
        margin-top: 20px;
      }

      .playlist-controls li {
        cursor: pointer;
        padding: 8px;
        margin-bottom: 5px;
        background-color: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
        transition: background-color 0.3s;
      }

      .playlist-controls li:hover {
        background-color: rgba(255, 255, 255, 0.2);
      }
      #visualizerMenu {
        position: absolute;
        top: 20px;
        right: 120px;
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        color: dimgray;
      }

      #visualizerSelect {
        font-size: 16px;
        padding: 5px;
      }

      ul {
        display: none;
      }

      .slider-container {
        position: absolute;
        top: 20px;
        left: 400px;
        width: 300px;
        color: white;
        font-family:
          system-ui,
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          "Open Sans",
          "Helvetica Neue",
          sans-serif,
          sans-serif;
      }

      .rotation-slider {
        position: absolute;
        top: 20px;
        left: 400px;

        color: white;
        font-family:
          system-ui,
          -apple-system,
          BlinkMacSystemFont,
          "Segoe UI",
          Roboto,
          Oxygen,
          Ubuntu,
          Cantarell,
          "Open Sans",
          "Helvetica Neue",
          sans-serif,
          sans-serif;
      }
      .hidden {
        visibility: hidden;
      }
      #toggleButton {
        width: 50px;
        height: 45px;
        /* background-color: rgb(40, 218, 99); */
        background: radial-gradient(circle, rgb(40, 218, 99), rgb(0, 0, 0));
        border: none;
        border-radius: 50%;
        position: absolute;
        z-index: 55;
        top: 30px;
        right: 300px;
        cursor: pointer;
      }

      #toggleButton.active {
        /* background-color: rgb(255, 0, 0); */
        background: radial-gradient(circle, rgb(231, 15, 15, 0.5), rgb(0, 0, 0, 0.5));

        width: 55px;
        height: 35px;
        border: none;
        border-radius: 50%;
        position: absolute;
        z-index: 55;
        top: 10px;
        right: 300px;
        cursor: pointer;
      }

      #blurButton {
        width: 50px;
        height: 45px;
        background: radial-gradient(circle, rgb(40, 218, 99), blue);
        border: none;
        border-radius: 50%;
        position: absolute;
        z-index: 55;
        top: 30px;
        right: 370px;
        cursor: pointer;
      }

      #blurButton.active {
        background: radial-gradient(circle, rgb(185, 25, 185, 0.5), rgba(0, 0, 255, 0.5));
        top: 10px;
        right: 370px;
        width: 55px;
        height: 35px;
      }

      #toggleCanvasBackgroundBtn {
        position: absolute;
        width: 280px;
        top: 90px;
        left: auto;
        background-color: #4caf50;
        color: white;
        border: none;
        padding: 12px 10px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 8px;
        /* transition: background-color 0.3s; */
      }

      #toggleCanvasBackgroundBtn:hover {
        background-color: #45a049;
      }
    </style>
  </head>
  <body
    class="h-full w-full overflow-x-hidden text-default text-base selection:bg-secondary selection:text-white"
  >
    <button id="toggleButton" class="text-sm font-bold text-black">UI</button>
    <button id="blurButton" class="text-sm font-bold text-black">BLUR</button>

    <div
      id="container"
      class="absolute h-full w-full overflow-x-hidden bg-transparent"
    >
      <canvas
        class="absolute h-full w-full overflow-hidden bg-transparent hover:blur-none"
        id="canvas1"></canvas>

      <!-- Editor -->
      <div id="editor">
        <div class="slider-container">
          <label for="rotation-slider">Adjust Parameter:</label>
          <input
            id="rotation-slider"
            type="range"
            min="0"
            max="10"
            step="0.01"
            value="1.618"
          />
        </div>
        <audio
          id="audio1"
          controls
          onloadedmetadata="this.volume = 0.5"
          class="absolute top-0 left-1/2 transform -translate-x-1/2 mt-4"></audio>
        <!-- <audio id="audio1" controls  class="mt-150-auto block"></audio> -->

        <!-- Add this in your HTML body where you want the UI element to appear -->
        <div id="visualizerMenu">
          <select id="visualizerSelect">
            <option value="visualizer">Visualizer 1</option>
            <option value="visualizer2">Visualizer 2</option>
            <option value="visualizer3">Visualizer 3</option>
            <option value="visualizer4">Visualizer 4</option>
            <option value="visualizer5">Visualizer 5</option>
            <option value="visualizer6">Visualizer 6</option>
          </select>
        </div>

        <!-- UPLOAD BUTTONS -->
        <div class="white z-100 w-[300px] h-[100px] bg-teal-600 absolute py-2">
          <label>Choose Audio</label>
          <input
            class="bottom-10 block flex-auto bg-transparent font-black"
            type="file"
            id="fileupload"
            accept="audio/*"
          />
        </div>

        <!-- BG -->
        <div
          class="absolute left-0 top-36 z-50 h-[100px] w-[300px] rounded-md bg-cyan-700 bg-opacity-100 p-2 shadow backdrop-blur-md"
        >
          <h2 class="mb-0 text-left font-medium text-gray-800 text-sm">
            Set Custom Background
          </h2>
          <input
            class="block w-[280px] cursor-pointer rounded border border-gray-300 bg-transparent px-0 py-0 font-medium text-gray-800 text-xs hover:bg-slate-300"
            type="file"
            id="imageUpload"
            accept="image/*"
          />
          <h3 class="mb-0 text-center font-medium text-gray-800 text-sm">.. and then</h3>

          <button id="toggleCanvasBackgroundBtn"
            >Toggle Background Transparency</button
          >
        </div>

        <!-- Playlist controls (Top right corner) -->
        <div class="playlist-controls">
          <button id="prevBtn" class="mdi mdi-skip-previous"></button>
          <button id="playPauseBtn" class="mdi mdi-play"></button>
          <button id="nextBtn" class="mdi mdi-skip-next"></button>
          <ul id="playlist">
            <!-- Playlist items will be generated here -->
          </ul>
        </div>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const toggleCanvasBackgroundBtn = document.getElementById(
          "toggleCanvasBackgroundBtn"
        );
        const canvas1 = document.getElementById("canvas1");

        if (toggleCanvasBackgroundBtn && canvas1) {
          toggleCanvasBackgroundBtn.addEventListener("click", function () {
            // Toggle canvas background between black and transparent
            if (canvas1.style.backgroundColor === "black") {
              canvas1.style.backgroundColor = "transparent"; // Set background to transparent
            } else {
              canvas1.style.backgroundColor = "black"; // Set background to black
            }
          });
        } else {
          console.error("Required elements not found in the DOM.");
        }
      });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const imageUploadElement = document.getElementById("imageUpload");

        if (imageUploadElement) {
          imageUploadElement.addEventListener("change", function (event) {
            const target = event.target as HTMLInputElement; // Explicitly cast to HTMLInputElement
            const files = target?.files;

            if (files && files[0]) {
              const file = files[0];
              const reader = new FileReader();

              reader.onload = function (e) {
                if (e?.target?.result) {
                  // Set the uploaded image as the background
                  document.body.style.backgroundImage = `url(${e.target.result})`;
                  document.body.style.backgroundSize = "cover";
                  document.body.style.backgroundPosition = "center";
                  document.body.style.backgroundRepeat = "no-repeat";
                } else {
                  console.error("Failed to read the image file.");
                }
              };

              reader.onerror = function () {
                console.error("Error reading the file.");
              };

              reader.readAsDataURL(file);
            } else {
              console.error("No file selected or invalid file input.");
            }
          });
        } else {
          console.error("Image upload element not found.");
        }
      });
    </script>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const toggleButton = document.getElementById("toggleButton");
        const editor = document.getElementById("editor");

        if (toggleButton && editor) {
          toggleButton.addEventListener("click", () => {
            // Toggle the 'hidden' class on the container
            editor.classList.toggle("hidden");
            toggleButton.classList.toggle("active");
          });
        } else {
          console.error("Required elements not found in the DOM.");
        }
      });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const blurButton = document.getElementById("blurButton");
        const canvas1 = document.getElementById("canvas1");

        if (blurButton && canvas1) {
          blurButton.addEventListener("click", () => {
            if (canvas1.style.filter === "blur(8px) contrast(10)") {
              canvas1.style.filter = "";
            } else {
              canvas1.style.filter = "blur(8px) contrast(10)";
            }
            blurButton.classList.toggle("active");
          });
        } else {
          console.error(
            "Required elements not found in the DOM for blurButton."
          );
        }
      });
    </script>
    <script src="../../paleo/time/script.js"></script>
  </body>
</html>
